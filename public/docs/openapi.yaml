openapi: 3.0.3
info:
  title: 'Google Drive Clone API'
  description: "Our API provides comprehensive functionality for managing files and folders in a cloud storage environment, akin to Google Drive. Built with Laravel, it offers robust endpoints for seamless integration with your front-end applications. With secure authentication mechanisms and efficient data handling, our API enables users to upload, download, organize, and share files effortlessly. Whether you're building a personal file repository or a collaborative workspace, our API empowers you to create a powerful cloud storage solution tailored to your needs."
  version: 1.0.0
servers:
  -
    url: 'https://google-drive-clone-api.wip'
paths:
  /api/v1/register:
    post:
      summary: 'Register a new user.'
      operationId: registerANewUser
      description: 'Registers a user based on the provided registration request'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    name: 'Charles Baumbach'
                    email: ledner.samson@example.com
                    created_at:
                      datetime: '2024-04-03T21:56:51.000000Z'
                      human_diff: '0 seconds ago'
                      human: 'Wed, Apr 3, 2024 9:56 PM'
                  token: 1|Ue8Wpv3izBua27OmZAAmk8eofN7XS7iQSzyiLW7c1f96270e
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Charles Baumbach'
                      email:
                        type: string
                        example: ledner.samson@example.com
                      created_at:
                        type: object
                        properties:
                          datetime:
                            type: string
                            example: '2024-04-03T21:56:51.000000Z'
                          human_diff:
                            type: string
                            example: '0 seconds ago'
                          human:
                            type: string
                            example: 'Wed, Apr 3, 2024 9:56 PM'
                  token:
                    type: string
                    example: 1|Ue8Wpv3izBua27OmZAAmk8eofN7XS7iQSzyiLW7c1f96270e
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'User name. Must not be greater than 255 characters.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'User email. Must be a valid email address. Must not be greater than 255 characters.'
                  example: john.doe@example.com
                password:
                  type: string
                  description: 'User password.'
                  example: password
                password_confirmation:
                  type: string
                  description: 'User password confirmation.'
                  example: password
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/v1/login:
    post:
      summary: 'Login a user'
      operationId: loginAUser
      description: 'Logins a user based on the provided login request'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 3
                    name: 'Prof. Sharon Bailey'
                    email: margarett88@example.org
                    created_at:
                      datetime: '2024-04-03T21:56:52.000000Z'
                      human_diff: '0 seconds ago'
                      human: 'Wed, Apr 3, 2024 9:56 PM'
                  token: 1|Ue8Wpv3izBua27OmZAAmk8eofN7XS7iQSzyiLW7c1f96270e
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Prof. Sharon Bailey'
                      email:
                        type: string
                        example: margarett88@example.org
                      created_at:
                        type: object
                        properties:
                          datetime:
                            type: string
                            example: '2024-04-03T21:56:52.000000Z'
                          human_diff:
                            type: string
                            example: '0 seconds ago'
                          human:
                            type: string
                            example: 'Wed, Apr 3, 2024 9:56 PM'
                  token:
                    type: string
                    example: 1|Ue8Wpv3izBua27OmZAAmk8eofN7XS7iQSzyiLW7c1f96270e
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'User email. Must be a valid email address.'
                  example: john.doe@example.com
                password:
                  type: string
                  description: 'User password.'
                  example: password
              required:
                - email
                - password
      security: []
  /api/v1/password/email:
    post:
      summary: 'Password reset link.'
      operationId: passwordResetLink
      description: 'Send a reset link to the given user.'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'We have e-mailed your password reset link.'
                properties:
                  message:
                    type: string
                    example: 'We have e-mailed your password reset link.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'User email. Must be a valid email address.'
                  example: john.doe@example.com
              required:
                - email
  /api/v1/password/reset:
    post:
      summary: 'Reset password.'
      operationId: resetPassword
      description: "Reset the given user's password."
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your password has been reset.'
                properties:
                  message:
                    type: string
                    example: 'Your password has been reset.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The reset password token.'
                  example: delectus
                email:
                  type: string
                  description: 'The email address. Must be a valid email address.'
                  example: leannon.benton@example.org
                password:
                  type: string
                  description: 'The new password.'
                  example: 'SV$v~#8`q,EOf%R?'
                password_confirmation:
                  type: string
                  description: 'The password confirmation.'
                  example: est
              required:
                - token
                - email
                - password
                - password_confirmation
      security: []
  '/api/v1/email/verify/{id}/{hash}':
    get:
      summary: 'Verify email'
      operationId: verifyEmail
      description: 'Verify the email of the user.'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email successfully verified'
                properties:
                  message:
                    type: string
                    example: 'Email successfully verified'
      tags:
        - Authentication
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '1'
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: 'The hash of the user.'
        example: 56Z83cdafEvb1P4VheDga6k
        required: true
        schema:
          type: string
  /api/v1/email/resend:
    post:
      summary: 'Resend email'
      operationId: resendEmail
      description: 'Resend the email verification notification.'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email verification link sent on your email id'
                properties:
                  message:
                    type: string
                    example: 'Email verification link sent on your email id'
      tags:
        - Authentication
      security: []
  /api/v1/logout:
    post:
      summary: 'Signs out a user'
      operationId: signsOutAUser
      description: ''
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        204:
          description: ''
      tags:
        - Authentication
  /api/v1/user:
    get:
      summary: 'Current user'
      operationId: currentUser
      description: 'Get the currently authenticated user.'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 4
                    name: 'Prof. Eduardo Rippin Sr.'
                    email: otis41@example.net
                    created_at:
                      datetime: '2024-04-03T21:56:52.000000Z'
                      human_diff: '0 seconds ago'
                      human: 'Wed, Apr 3, 2024 9:56 PM'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Prof. Eduardo Rippin Sr.'
                      email:
                        type: string
                        example: otis41@example.net
                      created_at:
                        type: object
                        properties:
                          datetime:
                            type: string
                            example: '2024-04-03T21:56:52.000000Z'
                          human_diff:
                            type: string
                            example: '0 seconds ago'
                          human:
                            type: string
                            example: 'Wed, Apr 3, 2024 9:56 PM'
      tags:
        - Authentication
tags:
  -
    name: Authentication
    description: "\nAPIs for authentication"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
